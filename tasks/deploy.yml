---

- name: Get timestamp
  command: date +%Y%m%d%H%M%S
  register: timestamp

- name: Add github.com to know_hosts
  shell: ssh-keyscan -H github.com >> /etc/ssh/ssh_known_hosts

- name: Pull sources from the repository.
  git: repo={{sfdeploy.repository}} dest={{sfdeploy.root}}/releases/{{timestamp.stdout}} version={{sfdeploy.branch}} key_file=/root/.ssh/id_rsa

- name: Remove files
  file: state=absent path={{sfdeploy.root}}/releases/{{timestamp.stdout}}/{{item}}
  with_items: sfdeploy.files_to_remove

- name: Remove shared files
  file: state=absent path={{sfdeploy.root}}/releases/{{timestamp.stdout}}/{{item}}
  with_items: sfdeploy.shared_files

- name: Create symlinks for shared files
  shell: ln -s {{sfdeploy.root}}/shared/{{item}} {{sfdeploy.root}}/releases/{{timestamp.stdout}}/{{item}}
  with_items: sfdeploy.shared_files

- name: Remove shared directories
  file: state=absent path={{sfdeploy.root}}/releases/{{timestamp.stdout}}/{{item}}
  with_items: sfdeploy.shared_directories

- name: Create symlinks for shared directories
  shell: ln -s {{sfdeploy.root}}/shared/{{ item }} {{sfdeploy.root}}/releases/{{timestamp.stdout}}/{{item}}
  with_items: sfdeploy.shared_directories

#- name: Get http user
#  shell: "ps aux | grep -E '[a]pache|[h]ttpd|[_]www|[w]ww-data|[n]ginx' | grep -v root | head -1 | cut -d ' ' -f1"
#  register: httpuser

- name: Run composer install
  shell: cd {{sfdeploy.root}}/releases/{{timestamp.stdout}} && composer install --no-dev

#- name: Run composer install
#  composer: command="install --verbose" working_dir={{sfdeploy.root}}/releases/{{timestamp.stdout}}

- name: ACL
  #shell: setfacl -R -m u:"{{httpuser.stdout}}":rwX -m u:`whoami`:rwX {{sfdeploy.root}}/releases/{{timestamp.stdout}}/{{item}} && setfacl -dR -m u:"{{httpuser.stdout}}":rwX -m u:`whoami`:rwX {{sfdeploy.root}}/releases/{{timestamp.stdout}}/{{item}}
  shell: setfacl -R -m u:"{{sfdeploy.acl_user}}":rwX -m u:`whoami`:rwX {{sfdeploy.root}}/releases/{{timestamp.stdout}}/{{item}} && setfacl -dR -m u:"{{sfdeploy.acl_user}}":rwX -m u:`whoami`:rwX {{sfdeploy.root}}/releases/{{timestamp.stdout}}/{{item}}
  with_items: sfdeploy.writable_directories

- name: Create database
  shell: cd {{sfdeploy.root}}/releases/{{timestamp.stdout}} && php bin/console doctrine:database:create --if-not-exists
  when: sfdeploy.create_database|default(false)

- name: Run migrations
  shell: cd {{sfdeploy.root}}/releases/{{timestamp.stdout}} && php bin/console doctrine:migrations:migrate -n
  when: sfdeploy.run_migration|default(false)

- name: Create symlink
  file: state=link src={{sfdeploy.root}}/releases/{{timestamp.stdout}} path={{sfdeploy.root}}/current
